# -*- coding: utf-8 -*-
"""dataextraction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1meVjbi6EK3luuB-AnakjzX4wxiYSkY8p
"""

!pip install PyPDF2 pdfplumber spacy pandas transformers

!python -m spacy download en_core_web_sm

!pip install tabula-py nltk spacy transformers pandas
!python -m spacy download en_core_web_sm
!python -m nltk.downloader punkt

!pip install pdfplumber

!pip install pymupdf pandas

!pip install PyPDF2 pdfplumber spacy supabase

!python -m spacy download en_core_web_sm

pip install supabase

from google.colab import files

uploaded = files.upload()

import pdfplumber
import spacy
import re
from supabase import create_client, Client
from datetime import datetime
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

nlp = spacy.load("en_core_web_sm")

from supabase import create_client, Client

SUPABASE_URL = "https://kcdpnyctrbrmzlhuntzk.supabase.co"
SUPABASE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtjZHBueWN0cmJybXpsaHVudHprIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzIxMjI4ODQsImV4cCI6MjA0NzY5ODg4NH0.REZsSh1tbYkyq3ncwC4-YI6CeV2XnsowifpSrsK74jY"
supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)

def extract_text_from_pdf(pdf_path):
    text = ""
    with pdfplumber.open(pdf_path) as pdf:
        for page in pdf.pages:
            text += page.extract_text()
    return text

# Extract fields using NLP and regex
def extract_fields(text):
    doc = nlp(text)
    entities = {ent.text: ent.label_ for ent in doc.ents}

from google.colab import files

uploaded = files.upload()

import pdfplumber
import pandas as pd


file_path = list(uploaded.keys())[0]

with pdfplumber.open(file_path) as pdf:
    page = pdf.pages[10]
    tables = page.extract_tables()

if tables:
    table_6_df = pd.DataFrame(tables[0])  # we are assuming Table 6 is the first table on page 11
    print("Extracted Table 6:\n", table_6_df)

    # now we should extract rows/columns related to "frequency"
    frequency_data = table_6_df[table_6_df.astype(str).apply(lambda x: x.str.contains('frequency', case=False, na=False)).any(axis=1)]

    print("\nExtracted Frequency Data:")
    print(frequency_data)
else:
    print("No tables found on Page 11.")

!pip install pytesseract pdf2image pillow

!apt-get install -y poppler-utils

!apt-get install -y poppler-utils  # Fix missing Poppler
!pip install pdf2image pytesseract pillow

!apt-get install -y tesseract-ocr

!apt-get install -y poppler-utils tesseract-ocr  # Install Poppler & Tesseract
!pip install pdf2image pytesseract pillow

from pdf2image import convert_from_path
import pytesseract

file_path = list(uploaded.keys())[0]
#page11
images = convert_from_path(file_path, first_page=11, last_page=11)

# applying the ocr on the extracted image
text = pytesseract.image_to_string(images[0])

# result
print("\nExtracted Table Text:\n", text)

from google.colab import files

uploaded = files.upload()

import os
pdf_path = "/content/1-s2.0-S0094576524004028-main (2).pdf"
if os.path.exists(pdf_path):
    print("File exists!")
else:
    print("File does not exist.")

from supabase import create_client, Client

SUPABASE_URL = "https://kcdpnyctrbrmzlhuntzk.supabase.co"
SUPABASE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtjZHBueWN0cmJybXpsaHVudHprIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzIxMjI4ODQsImV4cCI6MjA0NzY5ODg4NH0.REZsSh1tbYkyq3ncwC4-YI6CeV2XnsowifpSrsK74jY"
supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)

"""The **Frequency**"""

import pdfplumber
import re


def extract_frequency_from_text(pdf_path, page_index=5, keyword="Frequency"):
    with pdfplumber.open(pdf_path) as pdf:
        page = pdf.pages[page_index]
        raw_text = page.extract_text()

        # Search for frequency values in a table-like format (e.g., '8.04 GHz', '10.74 GHz')
        pattern = r"(\d+\.\d+\s*GHz)"  # Look for values like '8.04 GHz'
        matches = re.findall(pattern, raw_text, re.IGNORECASE)

        if matches:
            frequencies = matches  # Extracted frequency values
            print(f"Found Frequencies: {frequencies}")
            return frequencies
    return None

def insert_frequencies_into_supabase(frequencies):
    # Assuming you have a table named 'frequencies' with a column 'value' of type text or varchar
    data = [{"value": freq} for freq in frequencies]
    supabase.table('frequencies').insert(data)

pdf_path = "/content/1-s2.0-S0094576524004028-main (2).pdf"
frequencies = extract_frequency_from_text(pdf_path, page_index=5)

if frequencies:
    print(f"Frequencies: {frequencies}")
    insert_frequencies_into_supabase(frequencies)
else:
    print("Frequencies not found.")

pip install supabase

pip install python-dotenv

pip install schedule

pip install dateparser

!pip install chardet

"""**Payload**"""

from google.colab import files
uploaded = files.upload()

import os
file_name = list(uploaded.keys())[0]
print(f"Uploaded file: {file_name}")

!pip install PyPDF2

import PyPDF2

# Open the PDF file
with open(file_name, 'rb') as file:
    reader = PyPDF2.PdfReader(file)
    text = ''
    for page in reader.pages:
        text += page.extract_text()

print(text[:1000])  # Print the first 1000 characters to verify extraction

# Find the relevant section
start_keyword = "Payload architectures after downselection"
end_keyword = "References"  # Adjust based on the document structure

start_index = text.find(start_keyword)
end_index = text.find(end_keyword)

if start_index != -1 and end_index != -1:
    relevant_text = text[start_index:end_index]
else:
    relevant_text = text  # Fallback to entire text if section not found

print(relevant_text[:1000])  # Print the first 1000 characters of the relevant section

!pip install camelot-py

!pip install pytesseract pdf2image

!apt-get update

!apt-get install -y poppler-utils

!pip install pdf2image pytesseract

!apt-get install -y tesseract-ocr

!pip install pytesseract

from google.colab import files

uploaded = files.upload()
file_name = list(uploaded.keys())[0]
print(f"Uploaded file: {file_name}")

from pdf2image import convert_from_path

# Convert PDF pages to images
images = convert_from_path(file_name)

# Display the first image (optional)
images[0].show()

from pdf2image import convert_from_path
import pytesseract

# Convert only pages 13 and 14 to images
pages = [13, 14]  # Specify the pages you want
images = convert_from_path(file_name, first_page=pages[0], last_page=pages[1])

# Extract text from the images
extracted_text = ""
for image in images:
    text = pytesseract.image_to_string(image)
    extracted_text += text + "\n"

print(extracted_text)

# Define keywords to locate Table A.1
start_keyword = "Table A.1"
end_keyword = "References"  # Adjust based on the document structure

# Find the start and end of the relevant section
start_index = extracted_text.find(start_keyword)
end_index = extracted_text.find(end_keyword)

if start_index != -1 and end_index != -1:
    relevant_text = extracted_text[start_index:end_index]
else:
    relevant_text = extracted_text  # Fallback to entire text if section not found

print(relevant_text)

"""# **`Storing Payload data found frm the paper`**"""

# Define the table data as a list of dictionaries
table_data = [
    {"#": 1, "Number of transmitted packets per second": 1602.6, "Orbital height [km]": 400, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 28.6, "Channel BW [kHz]": 125, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 1.97},
    {"#": 2, "Number of transmitted packets per second": 1602.6, "Orbital height [km]": 400, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 38.2, "Channel BW [kHz]": 125, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 1.39},
    {"#": 3, "Number of transmitted packets per second": 1602.6, "Orbital height [km]": 800, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 19.1, "Channel BW [kHz]": 125, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 3.73},
    {"#": 4, "Number of transmitted packets per second": 1602.6, "Orbital height [km]": 800, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 28.6, "Channel BW [kHz]": 125, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 2.05},
    {"#": 5, "Number of transmitted packets per second": 1602.6, "Orbital height [km]": 1200, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 19.1, "Channel BW [kHz]": 125, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 3.80},
    {"#": 6, "Number of transmitted packets per second": 1602.6, "Orbital height [km]": 1600, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 16.4, "Channel BW [kHz]": 125, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 4.89},
    {"#": 7, "Number of transmitted packets per second": 938.2, "Orbital height [km]": 400, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 38.2, "Channel BW [kHz]": 125, "Spreading factor": 7, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 1.32},
    {"#": 8, "Number of transmitted packets per second": 938.2, "Orbital height [km]": 400, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 57.3, "Channel BW [kHz]": 125, "Spreading factor": 7, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 0.88},
    {"#": 9, "Number of transmitted packets per second": 938.2, "Orbital height [km]": 800, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 22.9, "Channel BW [kHz]": 125, "Spreading factor": 7, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 2.78},
    {"#": 10, "Number of transmitted packets per second": 938.2, "Orbital height [km]": 800, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 38.2, "Channel BW [kHz]": 125, "Spreading factor": 7, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 1.39},
    {"#": 11, "Number of transmitted packets per second": 938.2, "Orbital height [km]": 1200, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 16.4, "Channel BW [kHz]": 125, "Spreading factor": 7, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 2.93},
    {"#": 12, "Number of transmitted packets per second": 938.2, "Orbital height [km]": 1200, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 28.6, "Channel BW [kHz]": 125, "Spreading factor": 7, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 1.62},
    {"#": 13, "Number of transmitted packets per second": 938.2, "Orbital height [km]": 1600, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 13.6, "Channel BW [kHz]": 125, "Spreading factor": 7, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 3.55},
    {"#": 14, "Number of transmitted packets per second": 938.2, "Orbital height [km]": 1600, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 22.9, "Channel BW [kHz]": 125, "Spreading factor": 7, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 2.29},
    {"#": 15, "Number of transmitted packets per second": 938.2, "Orbital height [km]": 1600, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 16.4, "Channel BW [kHz]": 125, "Spreading factor": 8, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 3.10},
    {"#": 16, "Number of transmitted packets per second": 938.2, "Orbital height [km]": 400, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 40.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 2.50},
    {"#": 17, "Number of transmitted packets per second": 938.2, "Orbital height [km]": 400, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 55.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 1.95},
    {"#": 18, "Number of transmitted packets per second": 530.4, "Orbital height [km]": 800, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 30.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 3.45},
    {"#": 19, "Number of transmitted packets per second": 530.4, "Orbital height [km]": 800, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 40.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 2.10},
    {"#": 20, "Number of transmitted packets per second": 530.4, "Orbital height [km]": 1200, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 24.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 4.00},
    {"#": 21, "Number of transmitted packets per second": 530.4, "Orbital height [km]": 1200, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 30.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 2.60},
    {"#": 22, "Number of transmitted packets per second": 530.4, "Orbital height [km]": 1600, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 20.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 4.75},
    {"#": 23, "Number of transmitted packets per second": 530.4, "Orbital height [km]": 1600, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 25.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 3.20},
    {"#": 24, "Number of transmitted packets per second": 530.4, "Orbital height [km]": 1600, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 19.0, "Channel BW [kHz]": 150, "Spreading factor": 7, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 3.60},
    {"#": 25, "Number of transmitted packets per second": 530.4, "Orbital height [km]": 400, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 35.0, "Channel BW [kHz]": 100, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 2.80},
    {"#": 26, "Number of transmitted packets per second": 530.4, "Orbital height [km]": 400, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 50.0, "Channel BW [kHz]": 100, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 1.90},
    {"#": 27, "Number of transmitted packets per second": 530.4, "Orbital height [km]": 800, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 25.0, "Channel BW [kHz]": 100, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 2.00},
    {"#": 29, "Number of transmitted packets per second": 530.4, "Orbital height [km]": 1200, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 12.0, "Channel BW [kHz]": 100, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 3.80},
    {"#": 30, "Number of transmitted packets per second": 530.4, "Orbital height [km]": 1200, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 15.0, "Channel BW [kHz]": 100, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 2.60},
    {"#": 31, "Number of transmitted packets per second": 530.4, "Orbital height [km]": 1200, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 16.4, "Channel BW [kHz]": 125, "Spreading factor": 7, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 2.93},
    {"#": 32, "Number of transmitted packets per second": 296.1, "Orbital height [km]": 1200, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 28.6, "Channel BW [kHz]": 125, "Spreading factor": 7, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 1.62},
    {"#": 33, "Number of transmitted packets per second": 296.1, "Orbital height [km]": 1600, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 13.6, "Channel BW [kHz]": 125, "Spreading factor": 7, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 3.55},
    {"#": 34, "Number of transmitted packets per second": 296.1, "Orbital height [km]": 1600, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 22.9, "Channel BW [kHz]": 125, "Spreading factor": 7, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 2.29},
    {"#": 35, "Number of transmitted packets per second": 296.1, "Orbital height [km]": 1600, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 16.4, "Channel BW [kHz]": 125, "Spreading factor": 8, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 3.10},
    {"#": 36, "Number of transmitted packets per second": 296.1, "Orbital height [km]": 400, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 40.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 2.50},
    {"#": 37, "Number of transmitted packets per second": 296.1, "Orbital height [km]": 400, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 55.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 1.95},
    {"#": 38, "Number of transmitted packets per second": 296.1, "Orbital height [km]": 800, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 30.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 3.45},
    {"#": 39, "Number of transmitted packets per second": 296.1, "Orbital height [km]": 800, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 40.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 2.10},
    {"#": 40, "Number of transmitted packets per second": 296.1, "Orbital height [km]": 1200, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 24.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 4.00},
    {"#": 41, "Number of transmitted packets per second": 296.1, "Orbital height [km]": 1200, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 30.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 2.60},
    {"#": 42, "Number of transmitted packets per second": 296.1, "Orbital height [km]": 1600, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 20.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 4.75},
    {"#": 43, "Number of transmitted packets per second": 296.1, "Orbital height [km]": 1600, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 25.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 3.20},
    {"#": 44, "Number of transmitted packets per second": 296.1, "Orbital height [km]": 1600, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 19.0, "Channel BW [kHz]": 150, "Spreading factor": 7, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 3.60},
    {"#": 45, "Number of transmitted packets per second": 296.1, "Orbital height [km]": 400, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 35.0, "Channel BW [kHz]": 100, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 2.80},
    {"#": 46, "Number of transmitted packets per second": 296.1, "Orbital height [km]": 400, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 50.0, "Channel BW [kHz]": 100, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 1.90},
    {"#": 47, "Number of transmitted packets per second": 162.2, "Orbital height [km]": 800, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 18.0, "Channel BW [kHz]": 100, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 3.40},
    {"#": 48, "Number of transmitted packets per second": 162.2, "Orbital height [km]": 800, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 25.0, "Channel BW [kHz]": 100, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 2.00},
    {"#": 49, "Number of transmitted packets per second": 162.2, "Orbital height [km]": 1200, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 12.0, "Channel BW [kHz]": 100, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 3.80},
    {"#": 50, "Number of transmitted packets per second": 162.2, "Orbital height [km]": 1200, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 15.0, "Channel BW [kHz]": 100, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 2.60},
    {"#": 51, "Number of transmitted packets per second": 162.2, "Orbital height [km]": 1200, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 16.4, "Channel BW [kHz]": 125, "Spreading factor": 7, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 2.93},
    {"#": 52, "Number of transmitted packets per second": 162.2, "Orbital height [km]": 1200, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 28.6, "Channel BW [kHz]": 125, "Spreading factor": 7, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 1.62},
    {"#": 53, "Number of transmitted packets per second": 162.2, "Orbital height [km]": 1600, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 13.6, "Channel BW [kHz]": 125, "Spreading factor": 7, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 3.55},
    {"#": 54, "Number of transmitted packets per second": 162.2, "Orbital height [km]": 1600, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 22.9, "Channel BW [kHz]": 125, "Spreading factor": 7, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 2.29},
    {"#": 55, "Number of transmitted packets per second": 162.2, "Orbital height [km]": 1600, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 16.4, "Channel BW [kHz]": 125, "Spreading factor": 8, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 3.10},
    {"#": 56, "Number of transmitted packets per second": 162.2, "Orbital height [km]": 400, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 40.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 2.50},
    {"#": 57, "Number of transmitted packets per second": 89.7, "Orbital height [km]": 400, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 55.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 1.95},
    {"#": 58, "Number of transmitted packets per second": 89.7, "Orbital height [km]": 800, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 30.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 3.45},
    {"#": 59, "Number of transmitted packets per second": 89.7, "Orbital height [km]": 800, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 40.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 2.10},
    {"#": 60, "Number of transmitted packets per second": 89.7, "Orbital height [km]": 1200, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 24.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 4.00},
    {"#": 61, "Number of transmitted packets per second": 89.7, "Orbital height [km]": 1200, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 30.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 2.60},
    {"#": 62, "Number of transmitted packets per second": 89.7, "Orbital height [km]": 1600, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 20.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 4.75},
    {"#": 63, "Number of transmitted packets per second": 89.7, "Orbital height [km]": 1600, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 25.0, "Channel BW [kHz]": 150, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 3.20},
    {"#": 64, "Number of transmitted packets per second": 89.7, "Orbital height [km]": 1600, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 19.0, "Channel BW [kHz]": 150, "Spreading factor": 7, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 3.60},
    {"#": 65, "Number of transmitted packets per second": 48.3, "Orbital height [km]": 400, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 35.0, "Channel BW [kHz]": 100, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 2.80},
    {"#": 66, "Number of transmitted packets per second": 48.3, "Orbital height [km]": 400, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 50.0, "Channel BW [kHz]": 100, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 1.90},
    {"#": 67, "Number of transmitted packets per second": 48.3, "Orbital height [km]": 800, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 18.0, "Channel BW [kHz]": 100, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 3.40},
    {"#": 68, "Number of transmitted packets per second": 48.3, "Orbital height [km]": 800, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 25.0, "Channel BW [kHz]": 100, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 2.00},
    {"#": 69, "Number of transmitted packets per second": 48.3, "Orbital height [km]": 1200, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 12.0, "Channel BW [kHz]": 100, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 3.80},
    {"#": 70, "Number of transmitted packets per second": 48.3, "Orbital height [km]": 1200, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 15.0, "Channel BW [kHz]": 100, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 2.60},
    {"#": 71, "Number of transmitted packets per second": 48.3, "Orbital height [km]": 800, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 18.0, "Channel BW [kHz]": 100, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 3.40},
    {"#": 72, "Number of transmitted packets per second": 48.3, "Orbital height [km]": 800, "Tr. peak power [W]": 2, "Antenna beam-width [°]": 25.0, "Channel BW [kHz]": 100, "Spreading factor": 6, "UE Tr. peak power [W]": 2, "Payload mass [kg]": 2.00},
    {"#": 73, "Number of transmitted packets per second": 48.3, "Orbital height [km]": 1200, "Tr. peak power [W]": 1, "Antenna beam-width [°]": 12.0, "Channel BW [kHz]": 100, "Spreading factor": 6, "UE Tr. peak power [W]": 1, "Payload mass [kg]": 3.80},

]

# Remove the '#' key from each dictionary
table_data = [
    {
        "Number of transmitted packets per second": row["Number of transmitted packets per second"],
        "Orbital height [km]": row["Orbital height [km]"],
        "Tr. peak power [W]": row["Tr. peak power [W]"],
        "Antenna beam-width [°]": row["Antenna beam-width [°]"],
        "Channel BW [kHz]": row["Channel BW [kHz]"],
        "Spreading factor": row["Spreading factor"],
        "UE Tr. peak power [W]": row["UE Tr. peak power [W]"],
        "Payload mass [kg]": row["Payload mass [kg]"],
    }
    for row in table_data
]

# Display the updated table_data
print(table_data)
# Map dictionary keys to Supabase column names
# Assuming table_data contains all 73 rows now
mapped_table_data = [
    {
        "transmitted_packets_per_second": row["Number of transmitted packets per second"],
        "orbital_height_km": row["Orbital height [km]"],
        "tr_peak_power_w": row["Tr. peak power [W]"],
        "antenna_beam_width_deg": row["Antenna beam-width [°]"],
        "channel_bw_khz": row["Channel BW [kHz]"],
        "spreading_factor": row["Spreading factor"],
        "ue_tr_peak_power_w": row["UE Tr. peak power [W]"],
        "payload_mass_kg": row["Payload mass [kg]"],
        # Add any additional columns here if you have more
    }
    for row in table_data
]

# Insert all rows into Supabase
for data in mapped_table_data:
    try:
        response = supabase.table("payload").insert(data).execute()
        if response.data:
            print("Data inserted successfully:", data)
        else:
            print("Error inserting data:", response.error)
    except Exception as e:
        print("Error inserting data:", e)

!pip install supabase

from supabase import create_client, Client

SUPABASE_URL = "https://kcdpnyctrbrmzlhuntzk.supabase.co"
SUPABASE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImtjZHBueWN0cmJybXpsaHVudHprIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzIxMjI4ODQsImV4cCI6MjA0NzY5ODg4NH0.REZsSh1tbYkyq3ncwC4-YI6CeV2XnsowifpSrsK74jY"
supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)

# Test the connection by fetching data from the table
data_to_insert = df.to_dict(orient="records")

try:
    response = supabase.table("payload").insert(data_to_insert).execute()
    print("Data inserted successfully!", response)
except Exception as e:
    print("Error inserting data:", e)

# Print mapped_table_data before insertion
for data in mapped_table_data:
    print("Mapped data:", data)

# Then insert into Supabase
for data in mapped_table_data:
    try:
        response = supabase.table("payload").insert(data).execute()
        if response.data:
            print("Data inserted successfully:", data)
        else:
            print("Error inserting data:", response.error)
    except Exception as e:
        print("Error inserting data:", e)

# Check for duplicate rows in the mapped_table_data
unique_rows = [dict(t) for t in {tuple(d.items()) for d in mapped_table_data}]
print(f"Unique rows: {len(unique_rows)}")

for data in mapped_table_data:
    try:
        response = supabase.table("payload").insert(data).execute()
        if response.data:
            print("Data inserted successfully:", data)
        else:
            print("Error inserting data:", response.error)
    except Exception as e:
        print("Error inserting data:", e)

# Check for rows that were skipped or not inserted
duplicate_rows = [row for row in mapped_table_data if mapped_table_data.count(row) > 1]
print("Duplicated rows:", duplicate_rows)

# Check for rows that were not inserted
missing_rows = [row for row in mapped_table_data if row not in unique_rows]
print("Missing rows:", missing_rows)